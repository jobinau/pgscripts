scope: stampede
name: pg0

restapi:
  listen: 0.0.0.0:8008
  connect_address: pg0:8008

etcd:
  hosts: pg0:2379,pg1:2379,pg2:2379
  #Even though Patroni has auto discovery of all etcd nodes, patronictl don't work that way.

restapi:
  listen: 0.0.0.0:8008
  connect_address: pg0:8008
  certfile: /etc/patroni/pg0.crt
  keyfile: /etc/patroni/pg0.key
  cafile: /etc/patroni/ca.crt
  verify_client: required
  allowlist_include_members: true

ctl:
  insecure: false
  certfile: /etc/patroni/pg0.crt
  keyfile: /etc/patroni/pg0.key
  cacert: /etc/patroni/ca.crt

bootstrap:
  # this section will be written into Etcd:/<namespace>/<scope>/config after initializing new cluster
  dcs:
    ttl: 45
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
#    master_start_timeout: 300
#    synchronous_mode: false
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        wal_level: replica
        hot_standby: "on"
        logging_collector: 'on'
        max_wal_senders: 5
        max_replication_slots: 5
        wal_log_hints: "on"
        max_wal_size: '10GB'
        archive_mode: "on"
        archive_timeout: 600s
        archive_command: "cp -f %p /home/postgres/archived/%f"
      recovery_conf:
        restore_command: cp /home/postgres/archived/%f %p

  # some desired options for 'initdb'
  initdb:  # Note: It needs to be a list (some options need values, others are switches)
  - encoding: UTF8
  - data-checksums

  pg_hba:  # Add following lines to pg_hba.conf after running 'initdb'
  - host replication replicator 192.168.50.1/24 md5
  - host replication replicator 127.0.0.1/32 trust
  - host all all 192.168.50.1/24 md5
  - host all all 0.0.0.0/0 md5
#  - hostssl all all 0.0.0.0/0 md5

  # Additional script to be launched after initial cluster creation (will be passed the connection URL as parameter)
# post_init: /usr/local/bin/setup_cluster.sh

  # Some additional users users which needs to be created after initializing new cluster
  users:
    admin:
      password: admin
      options:
        - createrole
        - createdb

#PostgreSQL parameters for the local node. values in this section will have higher priority than from the DCS
postgresql:
  listen: 0.0.0.0:5432
  connect_address: pg0:5432
  data_dir: "/var/lib/pgsql/14/data"
  bin_dir: "/usr/pgsql-14/bin"
#  config_dir:
  pgpass: /tmp/pgpass0
  authentication:
    replication:
      username: replicator
      password: vagrant
    superuser:
      username: postgres
      password: vagrant
  parameters:
    unix_socket_directories: '/var/run/postgresql'

watchdog:
  mode: required # Allowed values: off, automatic, required
  device: /dev/watchdog
  safety_margin: 5

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false
